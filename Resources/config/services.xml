<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="link_guard.router_service_id">router.default</parameter> <!-- default value is symfony/framework-bundle router service id -->
    </parameters>

    <services>
        <defaults public="false" />

        <service id="Yarhon\LinkGuardBundle\Security\AccessMapBuilder">
            <argument>null</argument> <!--route collection, set by AccessMapBuilderConfigurator -->
            <call method="setControllerNameResolver">
                <argument type="service" id="Yarhon\LinkGuardBundle\Controller\ContainerControllerNameResolver" />
            </call>
            <configurator service="Yarhon\LinkGuardBundle\DependencyInjection\Configurator\AccessMapBuilderConfigurator" method="configure" />
        </service>

        <service id="Yarhon\LinkGuardBundle\DependencyInjection\Configurator\AccessMapBuilderConfigurator">
            <argument>null</argument> <!-- router service, taken by id specified in "link_guard.router_service_id" parameter -->
        </service>

        <service id="Yarhon\LinkGuardBundle\Controller\ControllerNameDeprecationsConverter">
            <argument type="service" id="kernel" />
        </service>

        <service id="Yarhon\LinkGuardBundle\Controller\ContainerControllerNameResolver">
            <argument type="service" id="Yarhon\LinkGuardBundle\DependencyInjection\Container\ClassMap" />
            <call method="setDeprecationsConverter">
                <argument type="service" id="Yarhon\LinkGuardBundle\Controller\ControllerNameDeprecationsConverter" />
            </call>
        </service>

        <service id="Yarhon\LinkGuardBundle\DependencyInjection\Container\ClassMap" public="true"> <!-- is set as public only to be available for TYPE_REMOVE compiler pass -->
            <argument type="collection"/>
        </service>

        <!-- set "kernel" service synthetic ("kernel" is originally set synthetic inside symfony/framework-bundle, which is an optional dependency) -->
        <service id="kernel" synthetic="true" public="true" />

        <service id="Yarhon\LinkGuardBundle\Security\Authorization\AuthorizationManager">
            <!--<argument type="service" id="Yarhon\LinkGuardBundle\Security\AccessMap" />-->   <!-- access map should go here -->
            <argument type="service" id="security.authorization_checker" />
        </service>
        <service id="link_guard.authorization_manager" alias="Yarhon\LinkGuardBundle\Security\Authorization\AuthorizationManager" public="true"/>
        <service id="Yarhon\LinkGuardBundle\Security\Authorization\AuthorizationManagerInterface" alias="link_guard.authorization_manager" />

        <service id="Yarhon\LinkGuardBundle\Security\Provider\SymfonyAccessControlProvider">
        </service>

        <service id="Yarhon\LinkGuardBundle\Security\Provider\SensioSecurityProvider">
        </service>

        <service id="Yarhon\LinkGuardBundle\CacheWarmer\RouteCacheWarmer">
            <argument type="service" id="Yarhon\LinkGuardBundle\Security\AccessMapBuilder" />
            <argument /><!-- cache dir -->
            <tag name="kernel.cache_warmer" />
        </service>

        <service id="Yarhon\LinkGuardBundle\DependencyInjection\Configurator\UrlGeneratorConfigurator">
            <argument type="service" id="Yarhon\LinkGuardBundle\Security\Authorization\AuthorizationManager" />
            <argument /><!-- override class -->
        </service>

        <service id="Yarhon\LinkGuardBundle\Twig\Extension\RoutingExtension">
            <argument type="collection">
                <argument key="referenceVarName">route_reference</argument>
            </argument>
            <tag name="twig.extension" />
        </service>

        <service id="Yarhon\LinkGuardBundle\Twig\RoutingRuntime">
        </service>

    </services>
</container>