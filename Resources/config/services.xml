<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <defaults public="false" autowire="false" autoconfigure="false" />

        <service id="Yarhon\RouteGuardBundle\Security\AccessMapBuilder">
            <argument type="service" id="yarhon_route_guard.cache" />

            <call method="setRouteCollectionTransformers">
                <argument type="collection" />
            </call>
            <call method="setAuthorizationProviders">
                <argument type="collection" />
            </call>
            <call method="setLogger">
                <argument type="service" id="logger" on-invalid="ignore" />
            </call>
            <call method="importRouteCollection">
                <argument type="service" id="router" on-invalid="ignore" />
            </call>
            <tag name="monolog.logger" channel="route_guard" />
        </service>

        <!-- authorization providers -->

        <service id="Yarhon\RouteGuardBundle\ExpressionLanguage\ExpressionFactory">
            <argument type="service" id="security.expression_language" on-invalid="ignore"/>
            <argument type="collection" />
            <argument>null</argument><!--- false ? -->
        </service>

        <service id="Yarhon\RouteGuardBundle\Security\Provider\SensioSecurityProvider">
            <argument type="service" id="Yarhon\RouteGuardBundle\ExpressionLanguage\ExpressionFactory" />
            <argument>null</argument>
            <tag name="yarhon_route_guard.authorization_provider" priority="1024" />
        </service>

        <service id="Yarhon\RouteGuardBundle\Security\Provider\SymfonyAccessControlProvider">
            <argument type="service" id="Yarhon\RouteGuardBundle\ExpressionLanguage\ExpressionFactory" />
            <tag name="yarhon_route_guard.authorization_provider" priority="1023" />
        </service>

        <!-- route collection services -->

        <service id="Yarhon\RouteGuardBundle\Routing\RouteCollection\ControllerNameDeprecationsTransformer">
            <argument type="service" id="Yarhon\RouteGuardBundle\Controller\ControllerNameDeprecationsConverter" />
            <tag name="yarhon_route_guard.route_collection_transformer" priority="1024" />
        </service>

        <service id="Yarhon\RouteGuardBundle\Routing\RouteCollection\ControllerNameTransformer">
            <argument type="service" id="Yarhon\RouteGuardBundle\Controller\ContainerControllerNameResolver" />
            <tag name="yarhon_route_guard.route_collection_transformer" priority="1023" />
        </service>

        <service id="Yarhon\RouteGuardBundle\Routing\RouteCollection\RemoveIgnoredTransformer">
            <argument type="collection" /> <!-- ignoredControllers -->
            <tag name="yarhon_route_guard.route_collection_transformer" priority="1022" />
        </service>

        <service id="Yarhon\RouteGuardBundle\Controller\ContainerControllerNameResolver">
            <argument type="service" id="Yarhon\RouteGuardBundle\DependencyInjection\Container\ClassMap" />
        </service>

        <service id="Yarhon\RouteGuardBundle\Controller\ControllerNameDeprecationsConverter">
            <argument type="service" id="kernel" />
        </service>

        <!-- is set as public only to be available for TYPE_REMOVE compiler pass -->
        <service id="Yarhon\RouteGuardBundle\DependencyInjection\Container\ClassMap" public="true">
            <argument type="collection" /> <!-- map -->
        </service>

        <!-- twig services -->

        <service id="Yarhon\RouteGuardBundle\Twig\Extension\RoutingExtension">
            <argument type="collection" /> <!-- options -->
            <tag name="twig.extension" />
        </service>

        <service id="Yarhon\RouteGuardBundle\Twig\RoutingRuntime">
            <tag name="twig.runtime" />
        </service>

        <!-- cache services -->

        <service id="Yarhon\RouteGuardBundle\CacheWarmer\AccessMapCacheWarmer">
            <argument type="service" id="Yarhon\RouteGuardBundle\Security\AccessMapBuilder" />
            <tag name="kernel.cache_warmer" />
        </service>

        <service id="yarhon_route_guard.cache" class="Symfony\Component\Cache\Adapter\AdapterInterface">
            <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache" />
            <argument>rg</argument> <!-- namespace -->
            <argument>0</argument> <!-- default lifetime -->
            <argument>null</argument> <!-- version -->
            <argument>%kernel.cache_dir%/route-guard</argument>
            <argument type="service" id="logger" on-invalid="ignore" />
            <tag name="monolog.logger" channel="cache" />
            <!--<tag name="cache.pool" clearer="cache.system_clearer" />-->
        </service>

        <!-- authorization services -->

        <service id="Yarhon\RouteGuardBundle\Security\AuthorizationManager">
            <argument type="service" id="Yarhon\RouteGuardBundle\Security\AccessMapBuilder" />
            <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
        </service>
        <service id="yarhon_route_guard.authorization_manager" alias="Yarhon\RouteGuardBundle\Security\AuthorizationManager" public="true"/>
        <service id="Yarhon\RouteGuardBundle\Security\AuthorizationManagerInterface" alias="yarhon_route_guard.authorization_manager" />

    </services>
</container>